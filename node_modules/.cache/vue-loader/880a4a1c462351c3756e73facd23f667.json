{"remainingRequest":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\src\\components\\Sound.vue?vue&type=style&index=0&id=fa84d4e2&lang=css&scoped=true&","dependencies":[{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\src\\components\\Sound.vue","mtime":1599177504293},{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cphpi\\Documents\\Programming\\js\\mintbean\\mintbean-vue-2020-09-02\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoueHlsb3Bob25lS2V5IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KDQoueHlsb3Bob25lTm90ZSB7DQogICAgY29sb3I6ICMzYzNjM2M7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOw0KICAgIHdpZHRoOiA3MiU7DQogICAgbWFyZ2luOiA3N3B4IGF1dG87DQogICAgZm9udC1zaXplOiAzZW07DQogICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBsaW5lLWhlaWdodDogMWVtOw0KICAgIHBhZGRpbmc6IDglOw0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCn0NCg0KLnh5bG9waG9uZU5vdGUgLnhseW9waG9uZUtleSB7DQogICAgZm9udC1zaXplOiAwLjVlbTsNCiAgICBmb250LXdlaWdodDogbm9ybWFsOw0KfQ0KDQoueHlsb3Bob25lUml2ZXQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgd2lkdGg6IDMwJTsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB0b3A6IDI2cHg7DQogIGxlZnQ6IDUwJTsNCiAgYm9yZGVyLXJhZGl1czogMTAwJTsNCiAgbWFyZ2luLWxlZnQ6IC0xNSU7DQogIGRpc3BsYXk6IGJsb2NrOw0KfQ0KDQouYm90dG9tUml2ZXQgew0KICB0b3A6IGluaXRpYWw7DQogIGJvdHRvbTogMjZweDsNCn0NCg0KLnh5bG9waG9uZVJpdmV0OmFmdGVyIHtjb250ZW50OiAiIjtkaXNwbGF5OiBibG9jaztwYWRkaW5nLWJvdHRvbTogMTAwJTt9DQo="},{"version":3,"sources":["Sound.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"Sound.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\r\n  <div class=\"h-100\">\r\n    <div v-on:click=\"playSound\" v-bind:style=\"{ backgroundColor: color, height: height }\" class=\"xylophoneKey\">\r\n      <div class=\"xylophoneRivet\"></div>\r\n      <div class=\"xylophoneNote\">\r\n        {{ note }}<br/>\r\n        <span class=\"xlyophoneKey\">({{ trigger }})</span>\r\n      </div>\r\n      <div class=\"xylophoneRivet bottomRivet\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FMSynth } from 'tone'\r\nimport { EventBus } from '../event-bus.js'\r\n\r\nexport default {\r\n  props: ['note', 'color', 'height', 'trigger'],\r\n\r\n  // Listens for keyPressed event. Calls checkKey function\r\n  created: function() {\r\n    EventBus.$on('keyPressed', this.checkKey)\r\n\r\n  },\r\n  methods: {\r\n    // plays the appropriate sound\r\n    playSound: function() {\r\n      this.xylophone = new FMSynth(\r\n        {\r\n          \"harmonicity\":8,\r\n          \"modulationIndex\": 2,\r\n          \"oscillator\" : {\r\n              \"type\": \"sine\"\r\n          },\r\n          \"envelope\": {\r\n              \"attack\": 0.001,\r\n              \"decay\": 2,\r\n              \"sustain\": 0.1,\r\n              \"release\": 2\r\n          },\r\n          \"modulation\" : {\r\n              \"type\" : \"square\"\r\n          },\r\n          \"modulationEnvelope\" : {\r\n              \"attack\": 0.002,\r\n              \"decay\": 0.2,\r\n              \"sustain\": 0,\r\n              \"release\": 0.2\r\n          }\r\n        }\r\n      ).toDestination();\r\n    this.xylophone.triggerAttackRelease(this.note,\"8n\")\r\n  },\r\n    // triggered by keyPressed custom event. If the pressed key matches triggerKey value, calls the playSound function\r\n    checkKey: function(keyPressed) {\r\n      if (keyPressed == this.trigger) {\r\n        this.playSound()\r\n      }\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      keyHeight: 100 - 15 * this.height\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped >\r\n.xylophoneKey {\r\n  position: relative;\r\n}\r\n\r\n.xylophoneNote {\r\n    color: #3c3c3c;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    width: 72%;\r\n    margin: 77px auto;\r\n    font-size: 3em;\r\n    font-family: monospace;\r\n    font-weight: bold;\r\n    line-height: 1em;\r\n    padding: 8%;\r\n    display: inline-block;\r\n}\r\n\r\n.xylophoneNote .xlyophoneKey {\r\n    font-size: 0.5em;\r\n    font-weight: normal;\r\n}\r\n\r\n.xylophoneRivet {\r\n  background-color: white;\r\n  width: 30%;\r\n  position: absolute;\r\n  top: 26px;\r\n  left: 50%;\r\n  border-radius: 100%;\r\n  margin-left: -15%;\r\n  display: block;\r\n}\r\n\r\n.bottomRivet {\r\n  top: initial;\r\n  bottom: 26px;\r\n}\r\n\r\n.xylophoneRivet:after {content: \"\";display: block;padding-bottom: 100%;}\r\n</style>\r\n"]}]}